version: '2.1'

orbs:
  aws-ecr: circleci/aws-ecr@6.5.0

machine: &machine
  # Run docker-compose on the VM
  machine:
    image: circleci/classic:201808-01
    docker_layer_caching: true
  working_directory: /tmp/workspace/project

commands:
  tag-n-push:
    description: Retag and push an image to AWS ECR by account and region.
    parameters:
      account:
        type: string
      region:
        type: string
      aws_access_key_id:
        type: string
      aws_secret_access_key:
        type: string
    steps:
      - run:
          name: >
            Retag Amazon ECS agent docker image: << parameters.account >>, << parameters.region >>
          command: |
            echo "export AWS_REGION=<< parameters.region >>" >> $BASH_ENV
            echo "export AWS_ACCESS_KEY_ID=<< parameters.aws_access_key_id >>" >> "$BASH_ENV"
            echo "export AWS_SECRET_ACCESS_KEY=<< parameters.aws_secret_access_key >>" >> "$BASH_ENV"

            source "$BASH_ENV"

            aws_account_id=$(aws sts get-caller-identity --query 'Account' --output text)
            ecr_registry=${aws_account_id}.dkr.ecr.${AWS_REGION}.amazonaws.com
            echo "export ECR_REGISTRY=${ecr_registry}" >> $BASH_ENV

            docker tag amazon/amazon-ecs-agent:${VERSION} ${ecr_registry}/papyrus/amazon-ecs-agent:${VERSION}
            docker tag amazon/amazon-ecs-agent:${VERSION} ${ecr_registry}/papyrus/amazon-ecs-agent:latest
      - aws-ecr/ecr-login
      - aws-ecr/push-image:
          account-url: ECR_REGISTRY
          repo: papyrus/amazon-ecs-agent
          tag: "latest,${VERSION}"

jobs:
  test:
    <<: *machine
    steps:
      - checkout
      - run:
          name: Run unit tests
          command: cd scripts/dockerfiles && docker-compose up --build --exit-code-from test-papyrus test-papyrus
  build:
    <<: *machine
    steps:
      - checkout
      - run:
          name: Set shared environment variables
          command: |
            SHORT_SHA1=${CIRCLE_SHA1:0:7}
            VERSION=${CIRCLE_TAG:-$SHORT_SHA1}

            # Make semantic versioning docker-tag compliant
            # See https://github.com/moby/moby/issues/16304
            echo "export VERSION=${VERSION/+/_}" >> $BASH_ENV
      - run:
          name: Build Amazon ECS agent docker image
          command: make docker
      - tag-n-push:
          account: dev
          region: us-east-1
          aws_access_key_id: ${AWS_ACCESS_KEY_ID_DEV}
          aws_secret_access_key: ${AWS_SECRET_ACCESS_KEY_DEV}
      - tag-n-push:
          account: dev
          region: ap-northeast-2
          aws_access_key_id: ${AWS_ACCESS_KEY_ID_DEV}
          aws_secret_access_key: ${AWS_SECRET_ACCESS_KEY_DEV}
      - tag-n-push:
          account: staging
          region: us-east-1
          aws_access_key_id: ${AWS_ACCESS_KEY_ID_STG}
          aws_secret_access_key: ${AWS_SECRET_ACCESS_KEY_STG}
      - tag-n-push:
          account: staging
          region: ap-northeast-2
          aws_access_key_id: ${AWS_ACCESS_KEY_ID_STG}
          aws_secret_access_key: ${AWS_SECRET_ACCESS_KEY_STG}
      - tag-n-push:
          account: production
          region: us-east-1
          aws_access_key_id: ${AWS_ACCESS_KEY_ID_PROD}
          aws_secret_access_key: ${AWS_SECRET_ACCESS_KEY_PROD}
      - tag-n-push:
          account: production
          region: ap-northeast-2
          aws_access_key_id: ${AWS_ACCESS_KEY_ID_PROD}
          aws_secret_access_key: ${AWS_SECRET_ACCESS_KEY_PROD}

workflows:
  build-and-push:
    jobs:
      - test:
          filters:
            tags:
              only: /^\d+\.\d+\.\d-*\w*\+*\d*$/
      - build:
          context: an-all
          requires:
            - test
          filters:
            branches:
              ignore:
                /.*/
            tags:
              only: /^\d+\.\d+\.\d-*\w*\+*\d*$/
